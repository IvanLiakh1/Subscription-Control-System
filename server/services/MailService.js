import nodemailer from 'nodemailer';
import dotenv from 'dotenv';
dotenv.config();
const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
    },
});

const sendReminderEmail = async ({ to, serviceName, price, nextPaymentDate }) => {
    const htmlContent = `
        <div style="font-family: Arial, sans-serif; padding: 20px; background: #f9f9f9;">
            <h2 style="color: #333;">üîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –ø—ñ–¥–ø–∏—Å–∫—É</h2>
            <p>–ü—Ä–∏–≤—ñ—Ç! üëã</p>
            <p>–ù–∞–≥–∞–¥—É—î–º–æ, —â–æ <strong>${serviceName}</strong> —Å–ø–∏—à–µ –∫–æ—à—Ç–∏ <strong>${nextPaymentDate}</strong> –≤ —Ä–æ–∑–º—ñ—Ä—ñ <strong>${price} –≥—Ä–Ω</strong>.</p>
            <p>–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–∞–ª–∞–Ω—Å —á–∏ —Å–∫–∞—Å—É–≤–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É, —è–∫—â–æ –≤–æ–Ω–∞ –≤–∞–º –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–∞.</p>
            <hr style="margin: 20px 0;">
            <p style="font-size: 12px; color: #888;">–¶–µ–π –ª–∏—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑ —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∞–º–∏.</p>
        </div>
    `;

    await transporter.sendMail({
        from: 'Subscription Control System',
        to: to,
        subject: `‚è∞ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: —Å–∫–æ—Ä–æ –æ–ø–ª–∞—Ç–∞ –∑–∞ ${serviceName}`,
        html: htmlContent,
    });
};
const sendNotificationEmail = async ({ to, serviceName, price, totalSpent, nextPaymentDate }) => {
    const htmlContent = `
        <div style="font-family: Arial, sans-serif; padding: 20px; background: #f9f9f9;">
            <h2 style="color: #333;">üîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ —Å–ø–∏—Å–∞–Ω–Ω—è –∑–∞ –ø—ñ–¥–ø–∏—Å–∫—É</h2>
            <p>–ü—Ä–∏–≤—ñ—Ç! üëã</p>
            <p>–ù–∞–≥–∞–¥—É—î–º–æ, —â–æ <strong>${serviceName}</strong> —Å–ø–∏—Å–∞–≤ –∫–æ—à—Ç–∏ –≤ —Ä–æ–∑–º—ñ—Ä—ñ <strong>${price} –≥—Ä–Ω</strong>.</p>
            <p>–ó–∞–≥–∞–ª—å–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏ —Å—Ç–∞–Ω–æ–≤–ª—è—Ç—å <strong>${totalSpent + price}</strong></p>
            <p>–î–∞—Ç–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Å–ø–∏—Å–∞–Ω–Ω—è: <strong>${nextPaymentDate}</strong></p>
            <p>–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–∞–ª–∞–Ω—Å —á–∏ —Å–∫–∞—Å—É–≤–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É, —è–∫—â–æ –≤–æ–Ω–∞ –≤–∞–º –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–∞.</p>
            <hr style="margin: 20px 0;">
            <p style="font-size: 12px; color: #888;">–¶–µ–π –ª–∏—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑ —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∞–º–∏.</p>
        </div>
    `;

    await transporter.sendMail({
        from: 'Subscription Control System',
        to: to,
        subject: `‚è∞ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ —Å–ø–∏—Å–∞–Ω–Ω—è –∫–æ—à—Ç—ñ–≤ –∑–∞ ${serviceName}`,
        html: htmlContent,
    });
};

export { sendReminderEmail, sendNotificationEmail };
